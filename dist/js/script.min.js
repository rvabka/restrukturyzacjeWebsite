"use strict";document.addEventListener("DOMContentLoaded",function(){var n=document.querySelector(".hamburger"),t=document.querySelector(".nav"),o=document.getElementById("services"),i=document.querySelector(".nav__dropdown"),e=document.querySelectorAll(".nav__dropdown-link"),c=document.querySelector(".nav__link-arrow"),r=document.querySelectorAll(".nav__link");function s(){t.classList.remove("active"),n.classList.remove("open")}850<window.innerWidth&&window.addEventListener("scroll",function(){150<window.scrollY?(t.style.position="fixed",t.style.backgroundColor="#f5f5f5",t.style.borderRadius="25px",t.style.marginTop="5px"):(t.style.position="relative",t.style.backgroundColor="",t.style.borderRadius="",t.style.marginTop="0")}),r.forEach(function(e){e.addEventListener("click",function(e){e.target!=o&&s()})}),e.forEach(function(e){e.addEventListener("click",function(){s()})}),n.addEventListener("click",function(){n.classList.toggle("open"),t.classList.toggle("active")}),o.addEventListener("click",function(e){window.innerWidth<850&&(e.preventDefault(),e.stopPropagation(),i.classList.toggle("visible"),i.classList.contains("visible")?c.innerHTML="&#9652;":c.innerHTML="&#9662;")}),document.addEventListener("click",function(e){t.contains(e.target)||n.contains(e.target)||!t.classList.contains("active")||s(),!i.contains(e.target)&&i.classList.contains("visible")&&(i.classList.remove("visible"),c.innerHTML="&#9662;")}),t.addEventListener("click",function(e){e.stopPropagation()}),i.addEventListener("click",function(e){e.stopPropagation()});var l=document.querySelector(".scrollToTopBtn"),a=document.querySelector("footer");null!==l&&(window.addEventListener("scroll",function(){var e=window.scrollY,n=window.innerHeight,t=a.offsetTop,o=a.offsetHeight;l.style.display=200<e?"block":"none",t<e+n&&e<t+o?(l.style.backgroundColor="#f5f5f5",l.style.color="#fcb900"):(l.style.backgroundColor="",l.style.color="")}),l.addEventListener("click",function(){window.scrollTo({top:0,behavior:"smooth"})}))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW1idXJnZXIiLCJxdWVyeVNlbGVjdG9yIiwibmF2Iiwic2VydmljZXNMaW5rIiwiZ2V0RWxlbWVudEJ5SWQiLCJkcm9wZG93bk1lbnUiLCJkcm9wZG93bkxpbmsiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY2xvc2VNZW51IiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwibmF2SXRlbXMiLCJ3aW5kb3ciLCJzY3JvbGxZIiwic3R5bGUiLCJwb3NpdGlvbiIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclJhZGl1cyIsImZvckVhY2giLCJpdGVtIiwiZXZlbnQiLCJ0YXJnZXQiLCJ0b2dnbGUiLCJpc1dpZGVTY3JlZW4iLCJpbm5lcldpZHRoIiwiaW5uZXJIVE1MIiwiY29udGFpbnMiLCJhcnJvdyIsInN0b3BQcm9wYWdhdGlvbiIsImZvb3RlckhlaWdodCIsIm9mZnNldEhlaWdodCIsInNjcm9sbFRvVG9wQnRuIiwiZGlzcGxheSIsImZvb3RlciIsInNjcm9sbFBvc2l0aW9uIiwid2luZG93SGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJmb290ZXJUb3AiLCJjb2xvciIsInNjcm9sbFRvIiwidG9wIiwiYmVoYXZpb3IiXSwibWFwcGluZ3MiOiJhQUFBQSxTQUFTQyxpQkFBaUIsbUJBQW9CLFdBQzVDLElBQU1DLEVBQVlGLFNBQVNHLGNBQWMsWUFBWSxFQUQvQ0MsRUFBQ0gsU0FBQUEsY0FBaUIsTUFBQSxFQUNsQkMsRUFBWUYsU0FBU0csZUFBYyxVQUFhLEVBQ2hEQyxFQUFlRCxTQUFBQSxjQUFxQixnQkFBQSxFQUNwQ0UsRUFBZUwsU0FBU00saUJBQWUscUJBQVcsRUFDbERDLEVBQUFBLFNBQWVQLGNBQVNHLGtCQUFjLEVBQ3RDSyxFQUFZUixTQUFHQSxpQkFBU1MsWUFBaUIsRUFvQi9DLFNBQUFDLElBQ0FOLEVBQUFPLFVBQVNELE9BQVksUUFBQSxFQUNuQk4sRUFBSU8sVUFBZ0JDLE9BQUMsTUFBUyxDQUVoQyxDQXRCMEJILElBQXBCSSxPQUFBQSxZQUVOQyxPQUFJQSxpQkFBb0IsU0FBSyxXQUNKLElBQWpCQSxPQUFDYixTQUNMRyxFQUFJVSxNQUFPQyxTQUFVLFFBQ25CWCxFQUFJWSxNQUFNQyxnQkFBa0IsVUFDNUJiLEVBQUlZLE1BQU1FLGFBQWUsT0FDekJkLEVBQUlZLE1BQU1HLFVBQVksUUFFdkJmLEVBQUFZLE1BQU1DLFNBQUEsV0FDTGIsRUFBSVksTUFBTUMsZ0JBQVcsR0FDckJiLEVBQUlZLE1BQU1FLGFBQWUsR0FDekJkLEVBQUlZLE1BQU1HLFVBQVksSUFHMUIsQ0FBQyxFQVNITixFQUFTTyxRQUFRLFNBQUFDLEdBQ2ZBLEVBQUtwQixpQkFBaUIsUUFBUyxTQUFBcUIsR0FDekJBLEVBQU1DLFFBQVVsQixHQUNsQkssRUFBVSxDQUVkLENBQUMsQ0FDSCxDQUFDLEVBRURGLEVBQ09QLFFBQUFBLFNBQUFBLEdBQUxvQixFQUNFWCxpQkFBVyxRQUFBLFdBQ1hBLEVBQUEsQ0FDRixDQUFBLENBQUYsQ0FBQyxFQUdEUixFQUNFQSxpQkFBb0JzQixRQUFjLFdBQ2xDcEIsRUFBSU8sVUFBZ0JhLE9BQUMsTUFBUyxFQUM5QnBCLEVBQUFPLFVBQUFhLE9BQUEsUUFBQSxDQUFGLENBQUMsRUFHRG5CLEVBQ1FvQixpQkFBc0JDLFFBQVUsU0FBQUosR0FFcEJSLE9BQUFZLFdBQUEsTUFHaEJuQixFQUFBQSxlQUFhSSxFQUNiVyxFQUFJZixnQkFBYUksRUFEakJKLEVBRVFvQixVQUFZSCxPQUFVLFNBQUMsRUFDOUJqQixFQUFNSSxVQUFBaUIsU0FBQSxTQUFBLEVBQ0xDLEVBQU1GLFVBQVksVUFFdEJFLEVBQUFGLFVBQUEsVUFHRixDQUFBLEVBQ0EzQixTQU1JVSxpQkFBVyxRQUFBLFNBQUFZLEdBR2JsQixFQUNHRyxTQUFBQSxFQUFhcUIsTUFBU04sR0FHdkJmLEVBQUFBLFNBQWFJLEVBQVVDLE1BQU8sR0FDOUJpQixDQUFBQSxFQUFBQSxVQUFNRixTQUFZLFFBQVcsR0FFL0JqQixFQUFBLEVBSUFZLENBQUFBLEVBQU1RLFNBQWlCUixFQUFBQyxNQUFBLEdBQ3ZCaEIsRUFBQUksVUFBQWlCLFNBQUEsU0FBQSxJQUVGckIsRUFBQUksVUFBQUMsT0FBQSxTQUFBLEVBQ0FMLEVBQUFBLFVBQWFOLFVBRWIsQ0FBQyxFQUlERyxFQUFJSCxpQkFBZ0IsUUFBVSxTQUFBcUIsR0FDNUJSLEVBQU1nQixnQkFBQzdCLENBVlQsQ0FBQyxFQUdETSxFQVlVd0IsaUJBQXNCQyxRQUFBQSxTQUFBQSxHQVg5QlYsRUFBTVEsZ0JBQWdCLENBQ3hCLENBQUMsRUFFRCxJQVlNRyxFQUFlakIsU0FBTWtCLGNBQWlCLGlCQUFBLEVBQ3ZDQyxFQUFNbkMsU0FBQUcsY0FBQSxRQUFBLEVBQ1VhLE9BQWZpQixJQVhKbkIsT0FZRWIsaUJBQUEsU0FBQSxXQVhBLElBQU1tQyxFQUFpQnRCLE9BQU9DLFFBYTlCc0IsRUFBQXZCLE9BQUF3QixZQUtFTCxFQUFlakIsRUFBTUUsVUFDckJlLEVBQWVqQixFQUFXZ0IsYUFJNUJDLEVBQUFqQixNQUFBa0IsUUFEaUJsQixJQUFmaUIsRUFDRixRQUc4QixPQUs5Qk0sRUFBQUgsRUFBQUMsR0FDSkQsRUFBQUcsRUFBQVIsR0FkTUUsRUFBZWpCLE1BQU1FLGdCQUFrQixVQUN2Q2UsRUFBZWpCLE1BQU13QixNQUFRLFlBRTdCUCxFQUFlakIsTUFBTUUsZ0JBQWtCLEdBQ3ZDZSxFQUFlakIsTUFBTXdCLE1BQVEsR0FFakMsQ0FBQyxFQUVEUCxFQUFlaEMsaUJBQWlCLFFBQVMsV0FDdkNhLE9BQU8yQixTQUFTLENBQ2RDLElBQUssRUFDTEMsU0FBVSxRQUNaLENBQUMsQ0FDSCxDQUFDLEVBRUwsQ0FBQyIsImZpbGUiOiJzY3JpcHQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24gKCkge1xyXG4gIGNvbnN0IGhhbWJ1cmdlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaGFtYnVyZ2VyXCIpO1xyXG4gIGNvbnN0IG5hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2XCIpO1xyXG4gIGNvbnN0IHNlcnZpY2VzTGluayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VydmljZXNcIik7XHJcbiAgY29uc3QgZHJvcGRvd25NZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXZfX2Ryb3Bkb3duXCIpO1xyXG4gIGNvbnN0IGRyb3Bkb3duTGluayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubmF2X19kcm9wZG93bi1saW5rXCIpO1xyXG4gIGNvbnN0IGFycm93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXZfX2xpbmstYXJyb3dcIik7XHJcbiAgY29uc3QgbmF2SXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm5hdl9fbGlua1wiKTtcclxuXHJcbiAgaWYgKHdpbmRvdy5pbm5lcldpZHRoID4gODUwKSB7XHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGlmICh3aW5kb3cuc2Nyb2xsWSA+IDE1MCkge1xyXG4gICAgICAgIG5hdi5zdHlsZS5wb3NpdGlvbiA9IFwiZml4ZWRcIjtcclxuICAgICAgICBuYXYuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjZjVmNWY1XCI7XHJcbiAgICAgICAgbmF2LnN0eWxlLmJvcmRlclJhZGl1cyA9IFwiMjVweFwiO1xyXG4gICAgICAgIG5hdi5zdHlsZS5tYXJnaW5Ub3AgPSBcIjVweFwiO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIG5hdi5zdHlsZS5wb3NpdGlvbiA9IFwicmVsYXRpdmVcIjtcclxuICAgICAgICBuYXYuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJcIjtcclxuICAgICAgICBuYXYuc3R5bGUuYm9yZGVyUmFkaXVzID0gXCJcIjtcclxuICAgICAgICBuYXYuc3R5bGUubWFyZ2luVG9wID0gXCIwXCI7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLy8gRnVua2NqYSBkbyB6YW15a2FuaWEgbWVudVxyXG4gIGZ1bmN0aW9uIGNsb3NlTWVudSgpIHtcclxuICAgIG5hdi5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gICAgaGFtYnVyZ2VyLmNsYXNzTGlzdC5yZW1vdmUoXCJvcGVuXCIpO1xyXG4gIH1cclxuXHJcbiAgbmF2SXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XHJcbiAgICAgIGlmIChldmVudC50YXJnZXQgIT0gc2VydmljZXNMaW5rKSB7XHJcbiAgICAgICAgY2xvc2VNZW51KCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuICBkcm9wZG93bkxpbmsuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICBjbG9zZU1lbnUoKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuICAvLyBUb2dnbGUgY2HFgmVnbyBtZW51IG5hd2lnYWN5am5lZ29cclxuICBoYW1idXJnZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgIGhhbWJ1cmdlci5jbGFzc0xpc3QudG9nZ2xlKFwib3BlblwiKTtcclxuICAgIG5hdi5jbGFzc0xpc3QudG9nZ2xlKFwiYWN0aXZlXCIpO1xyXG4gIH0pO1xyXG5cclxuICAvLyBUb2dnbGUgZHJvcGRvd24gbWVudVxyXG4gIHNlcnZpY2VzTGluay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XHJcbiAgICBjb25zdCBpc1dpZGVTY3JlZW4gPSB3aW5kb3cuaW5uZXJXaWR0aCA8IDg1MDtcclxuXHJcbiAgICBpZiAoaXNXaWRlU2NyZWVuKSB7XHJcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICBkcm9wZG93bk1lbnUuY2xhc3NMaXN0LnRvZ2dsZShcInZpc2libGVcIik7XHJcbiAgICAgIGlmIChkcm9wZG93bk1lbnUuY2xhc3NMaXN0LmNvbnRhaW5zKFwidmlzaWJsZVwiKSkge1xyXG4gICAgICAgIGFycm93LmlubmVySFRNTCA9IFwiJiM5NjUyO1wiOyAvLyBTdHJ6YcWCa2EgdyBnw7NyxJlcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcnJvdy5pbm5lckhUTUwgPSBcIiYjOTY2MjtcIjsgLy8gU3RyemHFgmthIHcgZMOzxYJcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICAvLyBaYW1rbmlqIG1lbnUgaSBkcm9wZG93biwgamXFm2xpIGtsaWtuacSZdG8gcG96YSBuaW1pXHJcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xyXG4gICAgaWYgKFxyXG4gICAgICAhbmF2LmNvbnRhaW5zKGV2ZW50LnRhcmdldCkgJiZcclxuICAgICAgIWhhbWJ1cmdlci5jb250YWlucyhldmVudC50YXJnZXQpICYmXHJcbiAgICAgIG5hdi5jbGFzc0xpc3QuY29udGFpbnMoXCJhY3RpdmVcIilcclxuICAgICkge1xyXG4gICAgICBjbG9zZU1lbnUoKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoXHJcbiAgICAgICFkcm9wZG93bk1lbnUuY29udGFpbnMoZXZlbnQudGFyZ2V0KSAmJlxyXG4gICAgICBkcm9wZG93bk1lbnUuY2xhc3NMaXN0LmNvbnRhaW5zKFwidmlzaWJsZVwiKVxyXG4gICAgKSB7XHJcbiAgICAgIGRyb3Bkb3duTWVudS5jbGFzc0xpc3QucmVtb3ZlKFwidmlzaWJsZVwiKTtcclxuICAgICAgYXJyb3cuaW5uZXJIVE1MID0gXCImIzk2NjI7XCI7IC8vIFN0cnphxYJrYSB3IGTDs8WCXHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIC8vIFphcG9iaWVnYWogemFteWthbml1IG1lbnUgcHJ6eSBrbGlrbmnEmWNpdSB3ZXduxIV0cnogbmF3aWdhY2ppXHJcbiAgbmF2LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcclxuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gIH0pO1xyXG5cclxuICAvLyBaYXBvYmllZ2FqIHphbXlrYW5pdSBkcm9wZG93biBwcnp5IGtsaWtuacSZY2l1IHdld27EhXRyeiBkcm9wZG93bnVcclxuICBkcm9wZG93bk1lbnUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xyXG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IHNjcm9sbFRvVG9wQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zY3JvbGxUb1RvcEJ0blwiKTtcclxuICBjb25zdCBmb290ZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZm9vdGVyXCIpO1xyXG4gIGlmICghKHNjcm9sbFRvVG9wQnRuID09PSBudWxsKSkge1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgKCkgPT4ge1xyXG4gICAgICBjb25zdCBzY3JvbGxQb3NpdGlvbiA9IHdpbmRvdy5zY3JvbGxZO1xyXG4gICAgICBjb25zdCB3aW5kb3dIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XHJcblxyXG4gICAgICBjb25zdCBmb290ZXJUb3AgPSBmb290ZXIub2Zmc2V0VG9wO1xyXG4gICAgICBjb25zdCBmb290ZXJIZWlnaHQgPSBmb290ZXIub2Zmc2V0SGVpZ2h0O1xyXG5cclxuICAgICAgLy8gUG9rYcW8IGx1YiB1a3J5aiBwcnp5Y2lzayBwcnpld2lqYW5pYSB3IGfDs3LEmVxyXG4gICAgICBpZiAoc2Nyb2xsUG9zaXRpb24gPiAyMDApIHtcclxuICAgICAgICBzY3JvbGxUb1RvcEJ0bi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNjcm9sbFRvVG9wQnRuLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gU3ByYXdkemVuaWUsIGN6eSBwcnp5Y2lzayBqZXN0IHcgb2JyxJliaWUgc2VrY2ppIGZvb3RlclxyXG4gICAgICBpZiAoXHJcbiAgICAgICAgc2Nyb2xsUG9zaXRpb24gKyB3aW5kb3dIZWlnaHQgPiBmb290ZXJUb3AgJiZcclxuICAgICAgICBzY3JvbGxQb3NpdGlvbiA8IGZvb3RlclRvcCArIGZvb3RlckhlaWdodFxyXG4gICAgICApIHtcclxuICAgICAgICBzY3JvbGxUb1RvcEJ0bi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIiNmNWY1ZjVcIjsgLy8gWm1pZcWEIGtvbG9yIGRsYSBzZWtjamkgZm9vdGVyXHJcbiAgICAgICAgc2Nyb2xsVG9Ub3BCdG4uc3R5bGUuY29sb3IgPSBcIiNmY2I5MDBcIjtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzY3JvbGxUb1RvcEJ0bi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIlwiOyAvLyBQcnp5d3LDs8SHIGRvbXnFm2xueSBrb2xvclxyXG4gICAgICAgIHNjcm9sbFRvVG9wQnRuLnN0eWxlLmNvbG9yID0gXCJcIjtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgc2Nyb2xsVG9Ub3BCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgd2luZG93LnNjcm9sbFRvKHtcclxuICAgICAgICB0b3A6IDAsXHJcbiAgICAgICAgYmVoYXZpb3I6IFwic21vb3RoXCIsXHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59KTtcclxuIl19
